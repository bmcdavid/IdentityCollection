// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bmcdavid.Episerver.SynchronizedProviderExtensions;

namespace bmcdavid.Episerver.SynchronizedProviderExtensions.Migrations
{
    [DbContext(typeof(ExtendedRoleDbContext))]
    partial class ExtendedRoleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("bmcdavid.Episerver.SynchronizedProviderExtensions.Entities.ExtendedRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LoweredRoleName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("LoweredRoleName")
                        .HasName("IX_tblSynchedRolesExtensions_LoweredRoleName");

                    b.ToTable("tblSynchedRolesExtensions");
                });

            modelBuilder.Entity("bmcdavid.Episerver.SynchronizedProviderExtensions.Entities.ExtendedRoleSynchedUser", b =>
                {
                    b.Property<int>("SynchedUserId");

                    b.Property<int>("ExtendedRoleId");

                    b.HasKey("SynchedUserId", "ExtendedRoleId");

                    b.HasIndex("ExtendedRoleId");

                    b.ToTable("tblSynchedUserToRolesExtensions");
                });

            modelBuilder.Entity("bmcdavid.Episerver.SynchronizedProviderExtensions.Entities.ExtendedSynchedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedUtcDate");

                    b.Property<DateTime>("LastLoginUtcDate");

                    b.Property<int>("SynchedUserId");

                    b.HasKey("Id");

                    b.HasIndex("SynchedUserId")
                        .IsUnique();

                    b.ToTable("tblSynchedUserExtensions");
                });

            modelBuilder.Entity("bmcdavid.Episerver.SynchronizedProviderExtensions.Entities.SynchedUser", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pkID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.Property<string>("GivenName")
                        .HasMaxLength(255);

                    b.Property<string>("LoweredGivenName")
                        .HasMaxLength(255);

                    b.Property<string>("LoweredSurname")
                        .HasMaxLength(255);

                    b.Property<string>("LoweredUserName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Metadata");

                    b.Property<string>("Surname")
                        .HasMaxLength(255);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("PkId")
                        .HasName("PK_tblWindowsUser");

                    b.HasIndex("Email")
                        .HasName("IX_tblWindowsUser_Email");

                    b.HasIndex("LoweredGivenName")
                        .HasName("IX_tblWindowsUser_LoweredGivenName");

                    b.HasIndex("LoweredSurname")
                        .HasName("IX_tblWindowsUser_LoweredSurname");

                    b.HasIndex("LoweredUserName")
                        .IsUnique()
                        .HasName("IX_tblWindowsUser_Unique");

                    b.ToTable("tblSynchedUser");
                });

            modelBuilder.Entity("bmcdavid.Episerver.SynchronizedProviderExtensions.Entities.ExtendedRoleSynchedUser", b =>
                {
                    b.HasOne("bmcdavid.Episerver.SynchronizedProviderExtensions.Entities.ExtendedRole", "ExtendedRole")
                        .WithMany("SynchedUserRoles")
                        .HasForeignKey("ExtendedRoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("bmcdavid.Episerver.SynchronizedProviderExtensions.Entities.SynchedUser", "SynchedUser")
                        .WithMany("SynchedUserRoles")
                        .HasForeignKey("SynchedUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("bmcdavid.Episerver.SynchronizedProviderExtensions.Entities.ExtendedSynchedUser", b =>
                {
                    b.HasOne("bmcdavid.Episerver.SynchronizedProviderExtensions.Entities.SynchedUser", "SynchedUser")
                        .WithOne("ExtendedUser")
                        .HasForeignKey("bmcdavid.Episerver.SynchronizedProviderExtensions.Entities.ExtendedSynchedUser", "SynchedUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
